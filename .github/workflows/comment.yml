name: Comment test

on:
  issue_comment:
    types: [created]

jobs:
  pr_commented:
    name: 'Handle PR comment'
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }}
    steps:
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=sha::${{ fromJson(steps.request.outputs.data).head.sha }}"
      - uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'My Test',
              head_sha: '${{ steps.pr_data.outputs.sha }}'
            }
            try {
              const result = await github.checks.create(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
